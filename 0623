INSERT INTO DEPT(deptno, dename)
VALUES(10,'관리');

DROP TABLE dept;

desc dept;

--기본키와 기본값 열을 포함하는 테이블 생성
CREATE TABLE dept (deptno   NUMBER(2) PRIMARY KEY,
         dname       VARCHAR2(14) CONSTRAINT d_name_nn NOT NULL,
         loc         VARCHAR2(13),
         create_date DATE DEFAULT SYSDATE);
         
--기본값 테스트
INSERT INTO dept(deptno, dname)
VALUES(10, '기획부');

INSERT INTO dept
VALUES(20, NULL, '서울', '19/03/14');

INSERT INTO dept
VALUES(20, '영업부', '서울', '19/03/14');
COMMIT;
SELECT * FROM dept;

--여러가지 제약조건을 포함하는 테이블 생성
CREATE TABLE emp
(empno NUMBER(6) PRIMARY KEY,
ename VARCHAR2(25) NOT NULL,
email VARCHAR2(50) CONSTRAINT emp_mail_nn NOT NULL
                   CONSTRAINT emp_mail_uk UNIQUE,
phone_no CHAR(11) NOT NULL,
job VARCHAR2(20),
salary NUMBER(8) CHECK(salary>2000),
deptno NUMBER(4)REFERENCES dept(deptno));

--제약조건 관련 딕셔너리 정보 보기
SELECT table_name , constraint_name, constraint_type, search_condition
FROM user_constraints
WHERE table_name IN ('EMP','DEPT');

select * from jobs;

--JOIN 걸어보기
SELECT cc.column_name, c.constraint_name
FROM user_constraints c JOIN user_cons_columns cc
ON (c.constraint_name = cc.constraint_name)
WHERE c.table_name = 'EMP';

--dictionary
DISC user_tables;
--user가 가지고 있는거
SELECT COUNT(*) FROM user_tables;
--user + 그에게 허용되어있는거 모두
SELECT COUNT(*) FROM all_tables;
--db의 모든 테이블, 이건 관리자만 볼 수 있당.
SELECT COUNT(*) FROM dba_tables;


SELECT table_name, index_name
FROM user_indexes
WHERE table_name IN ('DEPT','EMP');
--DML을 수행하며 제약조건 테스트하기
INSERT INTO emp
VALUES(null, '김수현','shkim@naver.com','01023456789','회사원',3500, null);
--외래키: null값 허용( 부모키 아닌건 안들어가지만)
INSERT INTO emp
VALUES(1234, '김수현','shkim@naver.com','01023456789','회사원',3500, null);
INSERT INTO emp
VALUES(1223, '박나래','nrpark@gmail.com','01054359876',null,1800, 20);
INSERT INTO emp
VALUES(1223, '박나래','nrpark@gmail.com','01054359876',null,7800, 20);
COMMIT;
SELECT * FROM emp;
UPDATE emp
SET deptno=30
WHERE empno=1234;
UPDATE emp
SET deptno=10
WHERE empno=1234;
COMMIT;
SELECT * FROM emp;
--테이블 복사 하기
CREATE TABLE    dept80
AS  SELECT  employee_id, last_name, salary*12 ANNSAL, hire_date
FROM    employees 
WHERE   department_id = 80;
SELECT * FROM dept80;

--테이블 읽기 전용 설정 테스트
ALTER TABLE emp READ ONLY;
UPDATE emp
SET salary = salary*1.1;

ALTER TABLE employees READ WRITE;

--테이블 삭제(자식이 없는 부모는 삭제됨)
DROP TABLE emp;
DROP TABLE dept;
SELECT * FROM emp;
--테이블을 삭제하면 인덱스도 같이 간다.
SELECT table_name, index_name
FROM user_indexes
WHERE table_name IN ('DEPT','EMP');
